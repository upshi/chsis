<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.chsis.dao.NewsMapper" >
  <resultMap id="BaseResultMap" type="top.chsis.model.News" >
    <id column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="commitTime" property="commitTime" jdbcType="VARCHAR" />
    <result column="checkTime" property="checkTime" jdbcType="VARCHAR" />
    <result column="publishTime" property="publishTime" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="publisher_uuid" property="publisherUUID" jdbcType="VARCHAR" />
    <result column="publisherType" property="publisherType" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    uuid, title, author, type, commitTime, checkTime, publishTime, state, publisher_uuid, 
    publisherType
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_news
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_news
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="top.chsis.model.News" >
    insert into t_news (uuid, title, author, 
      type, commitTime, checkTime, 
      publishTime, state, publisher_uuid, 
      publisherType, content)
    values (#{uuid,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{commitTime,jdbcType=VARCHAR}, #{checkTime,jdbcType=VARCHAR}, 
      #{publishTime,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{publisherUUID,jdbcType=VARCHAR}, 
      #{publisherType,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.chsis.model.News" >
    insert into t_news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="commitTime != null" >
        commitTime,
      </if>
      <if test="checkTime != null" >
        checkTime,
      </if>
      <if test="publishTime != null" >
        publishTime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="publisherUUID != null" >
        publisherUUID,
      </if>
      <if test="publisherType != null" >
        publisherType,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="commitTime != null" >
        #{commitTime,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="publisherUUID != null" >
        #{publisherUUID,jdbcType=VARCHAR},
      </if>
      <if test="publisherType != null" >
        #{publisherType,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.chsis.model.News" >
    update t_news
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="commitTime != null" >
        commitTime = #{commitTime,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        checkTime = #{checkTime,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        publishTime = #{publishTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="publisherUUID != null" >
        publisher_uuid = #{publisherUUID,jdbcType=VARCHAR},
      </if>
      <if test="publisherType != null" >
        publisherType = #{publisherType,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.chsis.model.News" >
    update t_news
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      commitTime = #{commitTime,jdbcType=VARCHAR},
      checkTime = #{checkTime,jdbcType=VARCHAR},
      publishTime = #{publishTime,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      publisher_uuid = #{publisherUUID,jdbcType=VARCHAR},
      publisherType = #{publisherType,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>